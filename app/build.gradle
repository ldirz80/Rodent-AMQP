buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.+")
    }
}




apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'scala'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'



jar {
    baseName = 'Rodent-AMQP'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
}

bootRepackage {
    mainClass = 'net.sleepymouse.amqp.spring.ServerBoot'
}

jacoco {
    toolVersion = "0.7.5.201505241946"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test
{
 	maxParallelForks = 1
	filter
	{
	     includeTestsMatching "net.sleepymouse.amqp.*"
	}
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}


jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
    
check.dependsOn jacocoTestReport

dependencies {

    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("io.netty:netty-all:5.+")
    compile("org.hibernate:hibernate-validator:5.2.+")
    //
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit:4.+")
    testCompile("org.mockito:mockito-all:2.+")
    testCompile("com.jayway.jsonpath:json-path-parent:1.+")
    testCompile("org.hamcrest:hamcrest-all:1.+")
     //
    compile('javax.inject:javax.inject:1')
}

springBoot {
    mainClass = "net.sleepymouse.amqp.spring.ServerBoot"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}
