package net.sleepymouse.amqp.spring.services.framedecoder;

import org.junit.*;

import net.sleepymouse.amqp.spring.components.primitives.PrimitivesManager;
import net.sleepymouse.amqp.utilities.*;

public class FrameTest
{

	private final int[] TRANSFER_FRAME = { //
			0x00, 0x00, 0x00, 0x71, 0x02, 0x00, 0x00, 0x00, // frame header (8 bytes)
			0x00, 0x53, 0x14, 0xc0, 0x11, 0x0b, 0x43, 0x43, // performative (22 bytes)
			0xa0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x43, 0x42, //
			0x40, 0x40, //
			0x40, 0x40, 0x40, 0x41, 0x00, 0x53, 0x73, 0xc0, // payload (87 bytes)
			0x27, 0x01, 0xa1, 0x24, 0x62, 0x33, 0x32, 0x65, //
			0x66, 0x32, 0x66, 0x35, 0x2d, 0x63, 0x65, 0x64, //
			0x37, 0x2d, 0x34, 0x32, 0x35, 0x37, 0x2d, 0x38, //
			0x66, 0x62, 0x62, 0x2d, 0x36, 0x62, 0x30, 0x36, //
			0x33, 0x61, 0x32, 0x33, 0x37, 0x63, 0x66, 0x61, //
			0x00, 0x53, 0x74, 0xc1, 0x18, 0x04, 0xa1, 0x05, //
			0x70, 0x72, 0x6f, 0x70, 0x32, 0xa1, 0x05, 0x76, //
			0x61, 0x6c, 0x75, 0x65, 0xa1, 0x05, 0x70, 0x72, //
			0x6f, 0x70, 0x31, 0x54, 0x01, 0x00, 0x53, 0x77, //
			0xa1, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f

	};

	@Before
	public void setUp() throws Exception
	{}

	@After
	public void tearDown() throws Exception
	{}

	@Test
	public final void testFrame()
	{
		FrameDecoder frameDecoder = new FrameDecoder();
		PrimitivesManager pm = new PrimitivesManager();
		pm.load();
		frameDecoder.setPrimitivesManager(pm);
		Frame frame;
		byte[] message = NumberUtils.generateByteArray(TRANSFER_FRAME);
		try
		{
			frame = frameDecoder.decode(message);
		}
		catch (FrameFormatException e)
		{
			e.printStackTrace();
			Assert.fail(e.getMessage());
			return;
		}
		//
		Assert.assertEquals(message.length, frame.getSize());
		//
		System.out.println(frame);
	}

}
